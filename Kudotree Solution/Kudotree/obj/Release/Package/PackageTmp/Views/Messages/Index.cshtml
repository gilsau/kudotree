@using Kudotree
@using Kudotree.Models
@using Kudotree.Helpers
@{
    ViewBag.Title = "My Conversations";
    Account acctCurrent = (Account)Session["User"];
    
    //Get conversations for this account, group them by conversation id
    Result result;
    IEnumerable<Conversation> convos = CommSvc.GetMyConversations(false, 20, out result);

    int toAcctId = 0;
    int iCount = 0;
    Guid? currentConvoId = null;
    if (Request.QueryString["convoId"] != null) { currentConvoId = Guid.Parse(Request.QueryString["convoId"]); }
}

@section Scripts{
    <script src="~/scripts/conversation.js"></script>
}

<!-- TODO: Add delayed scroll, in conversation list -->
<!-- TODO: Add loading symbol while page first loads -->
<!-- TODO: 'Send' button functionality -->
<!-- TODO: 'Click on Conversation & Load It' functionality -->
<!-- TODO: 'Get Conversation Updates every 5 secs' functionality -->
<!-- TODO: Hide Conversations list (slide it to the left) on small devices -->

<div class="container-fluid">
    <div class="row-fluid">
        
        <!-- List of conversations -->
        <div id="convoList" class="col-md-4 list-group panel"  style="margin:0px;padding:0px;">
            @{  if(convos.Count() > 0){
                
                    Result scrMsgs;
                
                    //Loop thru conversations
                    foreach (var convo in convos)
                    {
                        iCount++;

                        //Accounts
                        Account fromAcct = convo.Props.Select(p => p.Account).First();
                        Account toAcct = convo.Props.Select(p => p.Account1).First();
                        Account profileAcct = fromAcct.Id == acctCurrent.Id ? toAcct : fromAcct;
                        Communication comm = (from c in convo.Props select c).First();

                        //Save first convo to display in window
                        if (iCount == 1)
                        {
                            if (currentConvoId == null) { currentConvoId = comm.ConversationId; }
                        }   

                        //Prepare some vars for displaying message info
                        Communication mostRecentComm = CommSvc.GetMostRecentMessageByConversationId(comm.ConversationId, out scrMsgs);

                        string mostRecentMsgPrev = mostRecentComm.Msg != null ? mostRecentComm.Msg : string.Empty;

                        if (comm.Msg != null)
                        {
                            mostRecentMsgPrev = mostRecentComm.Msg.Length > 30 ? string.Format("{0}...", mostRecentComm.Msg.Substring(0, 30)) : mostRecentComm.Msg;
                        }
                        
                        string convoBackColor = convo.Id == currentConvoId ? "active" : "";

                        string days, hours, mins;
                        TimeUtility.LongAgo(out days, out hours, out mins, mostRecentComm.Created);
                        
                        <a style="padding:0px;" class="convoItem list-group-item @convoBackColor" data-convo-id="@comm.ConversationId" data-to-acct-id="@profileAcct.Id">
                            <div class="list-group-item-text" style="padding:0px;">
                                @if(mostRecentComm.ReceiverId == acctCurrent.Id && mostRecentComm.StatusId == (int)StatusType.New) {
                                    <div id="status-messages-user-@profileAcct.Id" data-id="@profileAcct.Id" class="status-messages-user text-left">
                                        <img id="imgNewMail-@mostRecentComm.ConversationId" src="~/images/icon_new_ribbon.png" style="margin:0px;height:50px;" class="pull-right" />
                                    </div>
                                }
                                <table id="tblConvoList">
                                    <tbody>
                                        <tr>
                                            <td><img class="circularProfilePic2" src="~/profilepics/@profileAcct.ProfilePic" style="height:30px;" /></td>
                                            <td><div><b>@string.Format("{0} {1}", profileAcct.Firstname, profileAcct.Lastname)</b></div>
                                                <div style="font-size:10px;">@string.Format("{0} {1} {2} ago", days, hours, mins)</div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td colspan="2">@mostRecentMsgPrev ...</td>
                                        </tr>
                                        <tr>
                                            <td colspan="2">
                                                <span class="btnTrash btn glyphicon glyphicon-trash" data-id="@comm.ConversationId" data-container="body" data-toggle="popover" data-placement="bottom" data-html="true" data-content="Archive Conversation"></span>
                                                <span class="btnProfile btn glyphicon glyphicon-user" data-profile-id="@profileAcct.Id" data-container="body" data-toggle="popover" data-placement="bottom" data-html="true" data-content="User Profile"></span>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </a>
                    }
                }
                else{
                    <text><p class="alert alert-info text-center">You have no conversations.</p></text>
                }
            }
        </div>

        <!-- Conversation Panel (message for selected conversation on the left side) -->
        <div class="col-md-8">
            @if (currentConvoId != null)
             {
                <div class="panel panel-default" id="convoPanel">
                    <img id="imgConvoLoading" src="~/images/loading_animated.gif" style="display:none;" />
                    <div id="convoMsgs">
                        @{
                            Result scrMsgs;
                            IList<Communication> msgs = CommSvc.GetMessagesByConversationId(currentConvoId, false, out scrMsgs).OrderBy(m => m.LastUpdated).ToList();
                            toAcctId = (acctCurrent.Id != msgs.First().ReceiverId) ? msgs.First().ReceiverId : msgs.First().SenderId;
                        }
                        @Html.Partial("~/Views/Messages/ConversationPanel.cshtml", msgs)
                    </div>
                </div>
                
                <!-- Text box w/send button -->
                <div id="convoTextSection" class="row-fluid" style="height:100px;">
                    <div class="col-md-10" style="padding:0px 3px 0px 3px;vertical-align:top;"><textarea id="txtConvoMsg" class="form-control" rows="2"></textarea></div>
                    <div class="col-md-2" style="padding:0px 3px 0px 3px;vertical-align:top;"><button id="btnSendConvoMsg" class="btn btn-primary btn-lg btn-block" data-user-name="@string.Format("{0} {1}", acctCurrent.Firstname, acctCurrent.Lastname)">Send</button></div>
                </div>
            }
            else
            {
                <text><p class="alert alert-info text-center">You have no messages.</p></text>
            }

            <input type="hidden" id="convoId" value="@currentConvoId" />
            <input type="hidden" id="fromAcctId" value="@acctCurrent.Id" />
            <input type="hidden" id="toAcctId" value="@toAcctId" />
        </div>
    </div>
</div>